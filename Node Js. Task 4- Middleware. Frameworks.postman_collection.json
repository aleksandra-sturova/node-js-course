{
	"info": {
		"_postman_id": "df0cdf82-5c9a-4ece-ba5a-d3f21ccd2702",
		"name": "Node Js. Task 4: Middleware. Frameworks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "products",
			"description": "",
			"item": [
				{
					"name": "/api/products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fef18251-41d8-40bf-9918-0976e84913d5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Should return array of products\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData instanceof Array).to.eql(true);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    id: 1,\r\n    name: 'Supreme T-Shirt',\r\n    brand: 'Supreme',\r\n    price: 99.99,\r\n    options: [\r\n      { color: 'blue' },\r\n      { size: 'XL' }\r\n    ],\r\n    reviews: [\r\n      {\r\n        id: '1.1',\r\n        message: 'cool color'\r\n      },\r\n    ]\r\n  }"
						},
						"url": {
							"raw": "http://localhost:8080/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/products:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9f37622-04f7-48c7-b567-4dfeb2e9e04b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Should return product by id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(2);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:8080/api/products/2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/products:id/reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efe3e76a-fe75-483f-865c-a40fad262311",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message\");",
									"      pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/products/1/reviews",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								"1",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/products - post",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6276123-0c35-43c1-9f55-cf9af5dd0c79",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Should add item to products\", function () {",
									"    let jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    let lestIndex = jsonData.length - 1;",
									"    let addedItem = jsonData[lestIndex];",
									"    ",
									"    pm.expect(addedItem.id).to.eql('3');",
									"    pm.expect(addedItem.brand).to.eql('Adidas');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"id\": \"3\",\r\n    \"name\": \"Adidas T-Shirt\",\r\n    \"brand\": \"Adidas\",\r\n    \"price\": 100.99,\r\n    \"options\": [\r\n      { \"color\": \"white\" },\r\n      { \"size\": \"M\" }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/products/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "api/products - post , empty body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c64781f2-71f6-4d2f-a98f-8fc8fd364c58",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 500 for empty body post request\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.body(\"Body can not be empty\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/products/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"description": "",
			"item": [
				{
					"name": "/api/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5eba345-06fa-4269-9e88-8ff991dc80ac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"let usersRespons = pm.variables.get(\"users_response\");",
									"",
									"pm.test(\"Should return all users\", function () {",
									"    pm.expect(pm.response.text()).to.include(usersRespons);",
									"});",
									"",
									"",
									"pm.test(\"Should return json array of two users\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData instanceof Array).to.eql(true);",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    id: 1,\r\n    name: 'Supreme T-Shirt',\r\n    brand: 'Supreme',\r\n    price: 99.99,\r\n    options: [\r\n      { color: 'blue' },\r\n      { size: 'XL' }\r\n    ],\r\n    reviews: [\r\n      {\r\n        id: '1.1',\r\n        message: 'cool color'\r\n      },\r\n    ]\r\n  }"
						},
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "239d1671-5012-47c7-a156-68d70dfb0340",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4f4bb8dd-951a-4ef9-87db-3177a2dd0714",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "bbe568ed-6c11-422f-8d58-8809554dd291",
			"key": "users_response",
			"value": "[{\"id\":1,\"name\":\"Lucy\"},{\"id\":2,\"name\":\"Jim_23\"}]",
			"type": "string",
			"description": ""
		}
	]
}